on:
  schedule:
    - cron: '7 7 * * *'

name: health
jobs:
  test:
    name: health check (${{ matrix.runner }}, ${{ matrix.toolchain }}, ${{ matrix.target }}, ${{ matrix.async-feature }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        toolchain: [1.63.0, stable, beta, nightly]
        runner: [ubuntu-latest, windows-latest, macos-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, x86_64-pc-windows-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin]
        async-feature: [async,async-rustls]
        exclude:
          # don't run async for musl builds
          - target: x86_64-unknown-linux-musl
            async-feature: async
          # don't run when target <-> runner pair is invalid
          - target: x86_64-pc-windows-gnu
            runner: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            runner: ubuntu-latest
          - target: x86_64-apple-darwin
            runner: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            runner: windows-latest
          - target: x86_64-unknown-linux-musl
            runner: windows-latest
          - target: x86_64-apple-darwin
            runner: windows-latest
          - target: x86_64-unknown-linux-gnu
            runner: macos-latest
          - target: x86_64-unknown-linux-musl
            runner: macos-latest
          - target: x86_64-pc-windows-gnu
            runner: macos-latest
          - target: x86_64-pc-windows-msvc
            runner: macos-latest
    steps:
      - if: matrix.target == 'x86_64-unknown-linux-musl'
        name: Add musl dependencies
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - uses: actions/checkout@v3

      - id: toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Cargo cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-rust-${{ steps.toolchain.outputs.cachekey }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-rust-${{ steps.toolchain.outputs.cachekey }}-

      - name: Health Check
        run: cargo test --no-default-features --features "sync image ${{ matrix.async-feature }}" --target ${{ matrix.target }} --release -- --test health --nocapture